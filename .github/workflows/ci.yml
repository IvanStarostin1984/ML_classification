name: CI

on:
  push:
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.docs.outputs.docs_only }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: files
        uses: tj-actions/changed-files@v41
      - id: docs
        run: |
          docs_only=true
          for f in ${{ steps.files.outputs.all_changed_files }}; do
            case "$f" in
              *.md) ;;
              *) docs_only=false; break ;;
            esac
          done
          echo "docs_only=$docs_only" >> "$GITHUB_OUTPUT"

  build:
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pre-commit
      - id: files
        uses: tj-actions/changed-files@v41
      - name: Run pre-commit on changed files
        run: pre-commit run --files ${{ steps.files.outputs.all_changed_files }}
      - name: Run flake8
        run: flake8
      - name: Run black
        run: black --check .
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m pytest -q

  docs:
    needs: build
    if: needs.changes.outputs.docs_only != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build docs
        run: sphinx-build -b html docs docs/_build
      - name: Upload HTML
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/

  markdown-lint:
    needs: changes
    if: needs.changes.outputs.docs_only == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Run markdownlint
        run: npx markdownlint-cli '**/*.md' --ignore node_modules
      - name: Check links
        run: find . -name '*.md' -not -path '*node_modules*' -print0 | xargs -0 -n1 npx markdown-link-check -q
